version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Map host port 3000 to container port 3000
    volumes:
      - .:/usr/src/app # Mount local code for development (optional for prod)
      - /usr/src/app/node_modules # Avoid mounting over node_modules
    environment:
      - NODE_ENV=development # Or 'production'
      - PORT=3000
      # Link to other services (use service names)
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-session_service}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret} # Load secrets securely in prod
      - SESSION_SECRET=${SESSION_SECRET:-your_session_secret} # Load secrets securely in prod
      - ALLOWED_ORIGINS=http://localhost:3001,http://localhost:3002,http://localhost:3003 # These are host ports mapped below
      # Add other backend env vars (GOOGLE_CLIENT_ID, etc.)
    depends_on:
      - redis
      - postgres
    networks:
      - app-network

  # Portal A
  portal-a:
    build:
      context: ./session_portals/portal-a # Context is the portal's directory
      dockerfile: ../Dockerfile.portal    # Use the common portal Dockerfile
    ports:
      - "3001:80" # Map host 3001 to Nginx container port 80
    environment:
      # This URL points to the backend *service name* within the Docker network
      - VITE_SESSION_SERVICE_URL=http://backend:3000
    depends_on:
      - backend
    networks:
      - app-network

  # Portal B
  portal-b:
    build:
      context: ./session_portals/portal-b
      dockerfile: ../Dockerfile.portal
    ports:
      - "3002:80" # Map host 3002 to Nginx container port 80
    environment:
      - VITE_SESSION_SERVICE_URL=http://backend:3000
    depends_on:
      - backend
    networks:
      - app-network

  # Portal C
  portal-c:
    build:
      context: ./session_portals/portal-c
      dockerfile: ../Dockerfile.portal
    ports:
      - "3003:80" # Map host 3003 to Nginx container port 80
    environment:
      - VITE_SESSION_SERVICE_URL=http://backend:3000
    depends_on:
      - backend
    networks:
      - app-network

  # Redis Service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379" # Expose Redis port if needed externally (usually not)
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # PostgreSQL Service
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432" # Expose Postgres port if needed externally
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-session_service}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password} # Use Docker secrets or .env for prod
    networks:
      - app-network

volumes:
  redis-data:
  postgres-data:

networks:
  app-network:
    driver: bridge